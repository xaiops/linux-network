# Production-grade Containerfile for Ambient Network Security Agent
# Using Red Hat Universal Base Image 9 with Python 3.11
FROM registry.redhat.io/ubi9/python-311:1-77

# Production environment variables
ENV APP_HOME=/opt/app-root/src/ambient-agent \
    PYTHONPATH=/opt/app-root/src/ambient-agent \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Create application user (OpenShift compatible - random UID, GID 0)
USER root
RUN mkdir -p ${APP_HOME} && \
    chgrp -R 0 ${APP_HOME} && \
    chmod -R g=u ${APP_HOME}

# Set working directory
WORKDIR ${APP_HOME}

# Copy requirements first for better Docker layer caching
COPY --chown=1001:0 requirements.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY --chown=1001:0 src/ ./src/
COPY --chown=1001:0 config.yaml ./config.yaml

# Create directories for runtime data with proper permissions
RUN mkdir -p ./logs && \
    chgrp -R 0 ./logs && \
    chmod -R g=u ./logs

# Set proper permissions for OpenShift SCC compatibility
RUN chgrp -R 0 /opt/app-root && \
    chmod -R g=u /opt/app-root

# Switch to non-root user
USER 1001

# Health check - check if process is running
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python -c "import sys; sys.exit(0)" || exit 1

# Default command - run the agent
CMD ["python", "-m", "src"]

